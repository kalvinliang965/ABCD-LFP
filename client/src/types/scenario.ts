import { ScenarioRaw } from './Scenarios';

// These are sample scenarios for the initial display
export const SAMPLE_SCENARIOS: ScenarioRaw[] = [
  // AI-generated code
  // Update SAMPLE_SCENARIOS to conform to ScenarioRaw interface
  {
    name: "Chen's Retirement Planning Scenario",
    maritalStatus: 'couple',
    birthYears: [1985, 1987],
    lifeExpectancy: [
      { type: 'fixed', value: 80 },
      { type: 'normal', mean: 82, stdev: 3 },
    ],
    financialGoal: 10000,
    residenceState: 'NY',
    investmentTypes: new Set([
      {
        name: 'cash',
        description: 'cash',
        returnAmtOrPct: 'amount',
        returnDistribution: [{ type: 'fixed', value: 0 }],
        expenseRatio: 0,
        incomeAmtOrPct: 'percent',
        incomeDistribution: [{ type: 'fixed', value: 0 }],
        taxability: true,
      },
      {
        name: 'S&P 500',
        description: 'S&P 500 index fund',
        returnAmtOrPct: 'percent',
        returnDistribution: [{ type: 'normal', mean: 0.06, stdev: 0.02 }],
        expenseRatio: 0.001,
        incomeAmtOrPct: 'percent',
        incomeDistribution: [{ type: 'normal', mean: 0.01, stdev: 0.005 }],
        taxability: true,
      },
      {
        name: 'tax-exempt bonds',
        description: 'NY tax-exempt bonds',
        returnAmtOrPct: 'amount',
        returnDistribution: [{ type: 'fixed', value: 0 }],
        expenseRatio: 0.004,
        incomeAmtOrPct: 'percent',
        incomeDistribution: [{ type: 'normal', mean: 0.03, stdev: 0.01 }],
        taxability: false,
      },
    ]),
    investments: new Set([
      {
        investmentType: 'cash',
        value: 100,
        taxStatus: 'non-retirement',
        id: 'cash',
      },
      {
        investmentType: 'S&P 500',
        value: 10000,
        taxStatus: 'non-retirement',
        id: 'S&P 500 non-retirement',
      },
      {
        investmentType: 'tax-exempt bonds',
        value: 2000,
        taxStatus: 'non-retirement',
        id: 'tax-exempt bonds',
      },
      {
        investmentType: 'S&P 500',
        value: 10000,
        taxStatus: 'pre-tax',
        id: 'S&P 500 pre-tax',
      },
      {
        investmentType: 'S&P 500',
        value: 2000,
        taxStatus: 'after-tax',
        id: 'S&P 500 after-tax',
      },
    ]),
    eventSeries: new Set([
      {
        name: 'salary',
        start: { type: 'fixed', value: 2025 },
        duration: { type: 'fixed', value: 40 },
        type: 'income',
        initialAmount: 75000,
        changeAmtOrPct: 'amount',
        changeDistribution: [{ type: 'uniform', lower: 500, upper: 2000 }],
        inflationAdjusted: false,
        userFraction: 1.0,
        socialSecurity: false,
      },
      {
        name: 'food',
        start: { type: 'startWith', eventSeries: 'salary' },
        duration: { type: 'fixed', value: 200 },
        type: 'expense',
        initialAmount: 5000,
        changeAmtOrPct: 'percent',
        changeDistribution: [{ type: 'normal', mean: 0.02, stdev: 0.01 }],
        inflationAdjusted: true,
        userFraction: 0.5,
        discretionary: false,
      },
      {
        name: 'vacation',
        start: { type: 'startWith', eventSeries: 'salary' },
        duration: { type: 'fixed', value: 40 },
        type: 'expense',
        initialAmount: 1200,
        changeAmtOrPct: 'amount',
        changeDistribution: [{ type: 'fixed', value: 0 }],
        inflationAdjusted: true,
        userFraction: 0.6,
        discretionary: true,
      },
      {
        name: 'streaming services',
        start: { type: 'startWith', eventSeries: 'salary' },
        duration: { type: 'fixed', value: 40 },
        type: 'expense',
        initialAmount: 500,
        changeAmtOrPct: 'amount',
        changeDistribution: [{ type: 'fixed', value: 0 }],
        inflationAdjusted: true,
        userFraction: 1.0,
        discretionary: true,
      },
      {
        name: 'my investments',
        start: { type: 'uniform', lower: 2025, upper: 2030 },
        duration: { type: 'fixed', value: 10 },
        type: 'invest',
        assetAllocation: {
          'S&P 500 non-retirement': 0.6,
          'S&P 500 after-tax': 0.4,
        },
        assetAllocation2: {
          'S&P 500 non-retirement': 0.8,
          'S&P 500 after-tax': 0.2,
        },
        glidePath: true,
        maxCash: 1000,
      },
      {
        name: 'rebalance',
        start: { type: 'uniform', lower: 2025, upper: 2030 },
        duration: { type: 'fixed', value: 10 },
        type: 'rebalance',
        assetAllocation: {
          'S&P 500 non-retirement': 0.7,
          'tax-exempt bonds': 0.3,
        },
      },
    ]),
    inflationAssumption: { type: 'fixed', value: 0.03 },
    afterTaxContributionLimit: 7000,
    spendingStrategy: ['vacation', 'streaming services'],
    expenseWithdrawalStrategy: ['S&P 500 non-retirement', 'tax-exempt bonds', 'S&P 500 after-tax'],
    RMDStrategy: ['S&P 500 pre-tax'],
    RothConversionOpt: true,
    RothConversionStart: 2050,
    RothConversionEnd: 2060,
    RothConversionStrategy: ['S&P 500 pre-tax'],
  },
];
